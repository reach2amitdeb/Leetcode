230. Kth Smallest Element in a BST
----------------------------------
Given the root of a binary search tree, and an integer k, return the kth (1-indexed) smallest element in the tree.

Solution:

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int kthSmallest(TreeNode root, int k) {
        ArrayList<Integer> sortedList = new ArrayList();
        inOrderTraversal(root, sortedList);
        return sortedList.get(k-1);
    }
    
    public void inOrderTraversal(TreeNode root, ArrayList<Integer> sortedList) {
        if(root == null) return;
        inOrderTraversal(root.left, sortedList);
        sortedList.add(root.val);
        inOrderTraversal(root.right, sortedList);
    }
}