690. Employee Importance
------------------------
You have a data structure of employee information, which includes the employee's unique id, their importance value, and their direct subordinates' id.

You are given an array of employees employees where:

employees[i].id is the ID of the ith employee.
employees[i].importance is the importance value of the ith employee.
employees[i].subordinates is a list of the IDs of the subordinates of the ith employee.
Given an integer id that represents the ID of an employee, return the total importance value of this employee and all their subordinates.

Solution:

/*
// Definition for Employee.
class Employee {
    public int id;
    public int importance;
    public List<Integer> subordinates;
};
*/

class Solution {
    Map<Integer, Employee> emap = new HashMap<>();
    public int getImportance(List<Employee> employees, int id) {
        for(Employee e: employees){
            emap.put(e.id, e);
        }
        return getImportanceHelper(id);
    }
    
    public int getImportanceHelper(int eid){
        Employee employee = emap.get(eid);
        int ans = employee.importance;
        for(Integer subid : employee.subordinates){
            ans += getImportanceHelper(subid);
        }
        return ans;
    }
}