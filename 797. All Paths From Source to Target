797. All Paths From Source to Target
------------------------------------
Given a directed acyclic graph (DAG) of n nodes labeled from 0 to n - 1, find all possible paths from node 0 to node n - 1, and return them in any order.The graph is given as follows: graph[i] is a list of all nodes you can visit from node i (i.e., there is a directed edge from node i to node graph[i][j]).

Solution:

class Solution {
    
    public List<List<Integer>> allPathsSourceTarget(int[][] graph) {
        List<List<Integer>> result = new ArrayList();
        find(graph, result, new ArrayList(), 0);
        return result;
    }
    
    public void find(int[][] graph, List<List<Integer>> result, List<Integer> running, int index) {
        running.add(index);
        if(index == graph.length-1){
            result.add(running);
        }else{
            for(int node : graph[index]){
                find(graph, result, new ArrayList(running), node);
            }
        }
    }
    
}